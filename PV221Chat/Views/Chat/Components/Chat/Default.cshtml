@model List<PV221Chat.DTO.MessageDTO>

<div class="chat-messages" id="chatMessages">
    @foreach (var message in Model)
    {
        <div class="message-@message.MessageType"
             id="message-id-@message.MessageId">

            <div class="message-content">@message.MessageText</div>
            <div class="message-time">@message.SentAt?.ToString("HH:mm")</div>
        </div>
    }
</div>

<div class="chat-input">
    <form id="messageForm">
        <input type="text" id="messageInput" placeholder="Введите сообщение..." required />
        <button type="submit">Отправить</button>
    </form>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.min.js"></script>


<script type="text/javascript">
    $(document).ready(function () {
        $('#messageForm').submit(function (e) {
            e.preventDefault();

            var chatId = @ViewBag.chatId; 
            var message = $('#messageInput').val();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SendMessage", "Chat")',
                data: { chatId: chatId, message: message },
                success: function (response) {
                    alert("Successfully!");
                    $('#messageInput').val(''); 

                    console.log(response);

                     const newMessage = {
                        MessageId: response.messageId,
                        ChatId: response.chatId,
                        SenderId: response.senderId,
                        MessageType: response.messageType,
                        SenderName: response.senderName,
                        MessageText: response.messageText,
                        SentAt: response.sentAt,
                        IsDeleted: response.isDeleted
                    };

                     const formattedTime = new Date(newMessage.SentAt).toLocaleTimeString([], { 
                        hour: '2-digit', 
                        minute: '2-digit', 
                        hour12: false 
                    });

                },
                error: function (xhr, status, error) {
                    alert("Failed");
                }
            });
            });
        });

    console.log(@ViewBag.chatId);

    const connectionChatHub = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub?chatId=@ViewBag.chatId")
        .build();

        connectionChatHub.on("ReceiveMessage", function (chatId, message) {
       
            const formattedTime = new Date(message.sentAt).toLocaleTimeString([], { 
                        hour: '2-digit', 
                        minute: '2-digit', 
                        hour12: false 
                    });

            $('#chatMessages').append(`
                        <div class="message-sent" id="message-id-${message.messageId}">
                            <div class="message-content">${message.messageText}</div>
                            <div class="message-time">${formattedTime}</div>
                        </div>
                    `);

    });

    connectionChatHub.start().then(function () {
        console.log("SignalR connected");
    }).catch(function (err) {
        return console.error(err.toString());
    });        
    
</script>
