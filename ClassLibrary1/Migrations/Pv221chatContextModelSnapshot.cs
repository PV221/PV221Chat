// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PV221Chat.Core.DataContext;

#nullable disable

namespace PV221Chat.Core.Migrations
{
    [DbContext(typeof(Pv221chatContext))]
    partial class Pv221chatContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PV221Chat.Core.DataModels.BlockedUser", b =>
                {
                    b.Property<int>("BlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlockId"));

                    b.Property<int?>("BlockedByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("BlockedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ChatId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("BlockId")
                        .HasName("PK__BlockedU__144215F14E325896");

                    b.HasIndex("BlockedByUserId");

                    b.HasIndex("BlockedUserId");

                    b.HasIndex("ChatId");

                    b.ToTable("BlockedUsers");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.BlogPage", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BlogId")
                        .HasName("PK__BlogPage__54379E30072AD400");

                    b.HasIndex("AuthorId");

                    b.ToTable("BlogPages");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.BlogSubscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"));

                    b.Property<int?>("BlogId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubscribedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId")
                        .HasName("PK__BlogSubs__9A2B249D02618BE4");

                    b.HasIndex("BlogId");

                    b.HasIndex("UserId");

                    b.ToTable("BlogSubscriptions");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.Chat", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatId"));

                    b.Property<string>("ChatName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ChatType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.HasKey("ChatId")
                        .HasName("PK__Chats__A9FBE7C62A0ED89F");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int?>("ChatId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SentAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MessageId")
                        .HasName("PK__Messages__C87C0C9CB22DEBA9");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.ModerationLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ActionTakenAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ModeratorId")
                        .HasColumnType("int");

                    b.Property<int?>("TargetChatId")
                        .HasColumnType("int");

                    b.Property<int?>("TargetUserId")
                        .HasColumnType("int");

                    b.HasKey("LogId")
                        .HasName("PK__Moderati__5E54864890767024");

                    b.HasIndex("ModeratorId");

                    b.HasIndex("TargetChatId");

                    b.HasIndex("TargetUserId");

                    b.ToTable("ModerationLogs");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NotificationText")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E1213E3E3F1");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Hobbies")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ProviderUserId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Skills")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4CA4BD31B9");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534B05749A4")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.UserChat", b =>
                {
                    b.Property<int>("UserChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserChatId"));

                    b.Property<int?>("ChatId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("MembershipStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserChatId")
                        .HasName("PK__UserChat__B5C6DD2215EF0527");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("UserChats");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.UserRating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<DateTime?>("RatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("RatedById")
                        .HasColumnType("int");

                    b.Property<int?>("RatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("RatingComment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RatingScore")
                        .HasColumnType("int");

                    b.HasKey("RatingId")
                        .HasName("PK__UserRati__FCCDF87C35F95E37");

                    b.HasIndex("RatedById");

                    b.HasIndex("RatedUserId");

                    b.ToTable("UserRatings");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.BlockedUser", b =>
                {
                    b.HasOne("PV221Chat.Core.DataModels.User", "BlockedByUser")
                        .WithMany("BlockedUserBlockedByUsers")
                        .HasForeignKey("BlockedByUserId")
                        .HasConstraintName("FK__BlockedUs__Block__4F7CD00D");

                    b.HasOne("PV221Chat.Core.DataModels.User", "BlockedUserNavigation")
                        .WithMany("BlockedUserBlockedUserNavigations")
                        .HasForeignKey("BlockedUserId")
                        .HasConstraintName("FK__BlockedUs__Block__5070F446");

                    b.HasOne("PV221Chat.Core.DataModels.Chat", "Chat")
                        .WithMany("BlockedUsers")
                        .HasForeignKey("ChatId")
                        .HasConstraintName("FK__BlockedUs__ChatI__5165187F");

                    b.Navigation("BlockedByUser");

                    b.Navigation("BlockedUserNavigation");

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.BlogPage", b =>
                {
                    b.HasOne("PV221Chat.Core.DataModels.User", "Author")
                        .WithMany("BlogPages")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK__BlogPages__Autho__36B12243");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.BlogSubscription", b =>
                {
                    b.HasOne("PV221Chat.Core.DataModels.BlogPage", "Blog")
                        .WithMany("BlogSubscriptions")
                        .HasForeignKey("BlogId")
                        .HasConstraintName("FK__BlogSubsc__BlogI__3A81B327");

                    b.HasOne("PV221Chat.Core.DataModels.User", "User")
                        .WithMany("BlogSubscriptions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__BlogSubsc__UserI__3B75D760");

                    b.Navigation("Blog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.Message", b =>
                {
                    b.HasOne("PV221Chat.Core.DataModels.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .HasConstraintName("FK__Messages__ChatId__30F848ED");

                    b.HasOne("PV221Chat.Core.DataModels.User", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("FK__Messages__Sender__31EC6D26");

                    b.Navigation("Chat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.ModerationLog", b =>
                {
                    b.HasOne("PV221Chat.Core.DataModels.User", "Moderator")
                        .WithMany("ModerationLogModerators")
                        .HasForeignKey("ModeratorId")
                        .HasConstraintName("FK__Moderatio__Moder__49C3F6B7");

                    b.HasOne("PV221Chat.Core.DataModels.Chat", "TargetChat")
                        .WithMany("ModerationLogs")
                        .HasForeignKey("TargetChatId")
                        .HasConstraintName("FK__Moderatio__Targe__4BAC3F29");

                    b.HasOne("PV221Chat.Core.DataModels.User", "TargetUser")
                        .WithMany("ModerationLogTargetUsers")
                        .HasForeignKey("TargetUserId")
                        .HasConstraintName("FK__Moderatio__Targe__4AB81AF0");

                    b.Navigation("Moderator");

                    b.Navigation("TargetChat");

                    b.Navigation("TargetUser");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.Notification", b =>
                {
                    b.HasOne("PV221Chat.Core.DataModels.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notificat__UserI__44FF419A");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.UserChat", b =>
                {
                    b.HasOne("PV221Chat.Core.DataModels.Chat", "Chat")
                        .WithMany("UserChats")
                        .HasForeignKey("ChatId")
                        .HasConstraintName("FK__UserChats__ChatI__2C3393D0");

                    b.HasOne("PV221Chat.Core.DataModels.User", "User")
                        .WithMany("UserChats")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserChats__UserI__2B3F6F97");

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.UserRating", b =>
                {
                    b.HasOne("PV221Chat.Core.DataModels.User", "RatedBy")
                        .WithMany("UserRatingRatedBies")
                        .HasForeignKey("RatedById")
                        .HasConstraintName("FK__UserRatin__Rated__403A8C7D");

                    b.HasOne("PV221Chat.Core.DataModels.User", "RatedUser")
                        .WithMany("UserRatingRatedUsers")
                        .HasForeignKey("RatedUserId")
                        .HasConstraintName("FK__UserRatin__Rated__3F466844");

                    b.Navigation("RatedBy");

                    b.Navigation("RatedUser");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.BlogPage", b =>
                {
                    b.Navigation("BlogSubscriptions");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.Chat", b =>
                {
                    b.Navigation("BlockedUsers");

                    b.Navigation("Messages");

                    b.Navigation("ModerationLogs");

                    b.Navigation("UserChats");
                });

            modelBuilder.Entity("PV221Chat.Core.DataModels.User", b =>
                {
                    b.Navigation("BlockedUserBlockedByUsers");

                    b.Navigation("BlockedUserBlockedUserNavigations");

                    b.Navigation("BlogPages");

                    b.Navigation("BlogSubscriptions");

                    b.Navigation("Messages");

                    b.Navigation("ModerationLogModerators");

                    b.Navigation("ModerationLogTargetUsers");

                    b.Navigation("Notifications");

                    b.Navigation("UserChats");

                    b.Navigation("UserRatingRatedBies");

                    b.Navigation("UserRatingRatedUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
